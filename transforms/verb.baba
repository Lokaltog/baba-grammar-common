tense {
	past {
		# Exceptions
		/((re)?set)$/i -> '$1'
		'send' -> 'sent'
		'show' -> 'shown'
		'checkout' -> 'checked out'
		'catalog' -> 'cataloged'
		# General rules
		/(.*[aeiouy]{2}[bcdfghjklmnpqrstvwxz])$/i -> '$1ed'
		/(.*c)$/i -> '$1ked'
		/(.*)mit$/i -> '$1mitted'
		/(.*)fer$/i -> '$1ferred'
		/(.{1,3}[aeiou])([bdfglmnprstz])$/i -> '$1$2$2ed'
		/(.*[aeiouy]l)$/i -> '$1led'
		/(.*?[eyo]e)$/i -> '$1d'
		/(.*)y$/i -> '$1ied'
		/(.*?)e?$/i -> '$1ed'
	}
	past-participle {
		/(.*?)[aeiouy]?$/i -> '$1en'
	}
	present {
		# Exceptions
		'checkout' -> 'checks out'
		# General rules
		/(.*[^aeiou])y$/i -> '$1ies'
		/(.*([sc]h|s|ex))$/i -> '$1es'
		/(.*)$/i -> '$1s'
	}
	present-participle {
		# Exceptions
		'checkout' -> 'checking out'
		'catalog' -> 'cataloging'
		# General rules
		/(.*[aeiouy]{2}[bcdfghjklmnpqrstvwxz])$/i -> '$1ing'
		/(.*c)$/i -> '$1king'
		/(.*)mit$/i -> '$1mitting'
		/(.*)fer$/i -> '$1ferring'
		/(.*)ize$/i -> '$1ization'
		/(.{1,3}[aeiou])([bdfglmnprstz])$/i -> '$1$2$2ing'
		/(.*[aeiouy]l)$/i -> '$1ling'
		/(.*?[eyo]e)$/i -> '$1ing'
		/(.*?)e?$/i -> '$1ing'
	}
}
# Make/become/treat
convert-ize {
	/(.*)[aeiouy]$/i -> '$1ize'
	/(.*)$/i -> '$1ize'
}
convert-agent-noun-latinate {
	/(.*?)(e|or)?$/i -> '$1or'
}
convert-agent-noun-germanic {
	/(.*?)e?$/i -> '$1er'
}
